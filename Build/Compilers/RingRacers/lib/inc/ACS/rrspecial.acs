//-----------------------------------------------------------------------------
//
// Copyright(C) 2015-2017 David Hill
// Copyright(C) 2022-2023 Sally Cochenour
//
// See COPYLIB for license information.
//
//-----------------------------------------------------------------------------
//
// Header for target library libacs.
//
// Defines for Dr. Robotnik's Ring Racers' ACS.
//
//-----------------------------------------------------------------------------

#ifndef __GDCC_Header__ACS__rrspecial_acs__
#define __GDCC_Header__ACS__rrspecial_acs__


//----------------------------------------------------------------------------|
// Macros                                                                     |
//

#define ACS_ExecuteWait(name, ...) \
	do \
	{ \
		str __execute_wait_name = (name); \
		ACS_Execute(__execute_wait_name, __VA_ARGS__ + 0); \
		ScriptWait(__execute_wait_name); \
	} \
	while(0)

#define Dialogue_NewDismissText(text) \
	do \
	{ \
		str __text = (text); \
		Dialogue_NewText(__text); \
		Dialogue_WaitForDismiss(); \
	} \
	while(0)

#define ACS_PrintPropertyBase() \
	(char): PrintChar, \
	(str):  PrintString, \
	\
	a(global): PrintGlobalCharArray, \
	a(global): PrintGlobalCharRange, \
	a(local):  PrintLocalCharArray, \
	a(local):  PrintLocalCharRange, \
	a(module): PrintModuleCharArray, \
	a(module): PrintModuleCharRange, \
	a(world):  PrintWorldCharArray, \
	a(world):  PrintWorldCharRange, \
	\
	b: PrintBinary, \
	c: PrintChar, \
	d: PrintInt, \
	f: PrintFixed, \
	i: PrintInt, \
	s: PrintString, \
	x: PrintHex

#pragma state save
#pragma define raw ON
#define suspend do (__suspend()); while(0)
#pragma state restore


//----------------------------------------------------------------------------|
// Functions                                                                  |
//

// [type] [ID]:[function name]([required args], [optional args])

special
	int		  400:Sector_CopyHeights(3, 4),

	int		  402:Light_Copy(2, 3),
	int		  403:Sector_CopyHeightsMove(4, 6),

	int		  405:Sector_MovePlanes(4, 5),

	int		  408:Sector_CopyTextures(3),
	int		  409:Sector_ChangeTag(2, 3),
	int		  410:Line_ChangeFrontSectorTag(2, 3),

	int		  411:Sector_StopMovement(1),
	int		  412:Thing_Teleport(1, 5),
	int		  414:PlaySFX(1, 4),
	int		  415:Console_Execute(1),
	int		  416:Light_Flicker(5),
	int		  417:Light_Glow(5),
	int		  418:Light_Blink(6),

	int		  420:Light_Fade(3, 4),
	int		  421:Light_Stop(1),
	int		  422:Camera_CutAwayView(2, 5),
	int		  423:Level_SetSky(1, 2),
	int		  424:Level_SetWeather(1, 2),
	int		  425:Thing_SetState(2),
	int		  426:Thing_Stop(0, 1),
	int		  427:Player_AddScore(1),
	int		  428:Sector_PlatformMovement(2, 5),
	int		  429:Sector_Crush(3),

	int		  433:Thing_SetFlip(1),

	int		  435:Sector_ChangeScroll(3),
	int		  436:FOF_Shatter(2),
	int		  437:Player_ToggleControl(1),
	int		  438:Thing_SetScale(1),
	int		  439:Line_CopyTextures(3, 4),
	int		  440:Level_StartMetalSonicRace(0),
	int		  441:SetUnlockableTrigger(1),
	int		  442:Sector_ChangeThingStates(3, 4),
	int		  443:Lua_Execute(1, 12),
	int		  444:Earthquake(1, 3),
	int		  445:FOF_SetExists(3),
	int		  446:FOF_Crumble(2, 3),
	int		  447:Sector_SetColormap(2, 3),
	int		  448:Level_SetSkyboxViewpoints(3, 4),
	int		  449:Level_SetBossDisabled(2),

	int		  452:FOF_SetAlpha(3, 4),
	int		  453:FOF_Fade(4, 5),
	int		  454:FOF_StopFade(2, 3),
	int		  455:Sector_FadeColormap(3, 4),
	int		  456:Sector_StopColormapFade(1),
	int		  457:Thing_StartTracking(4, 5),
	int		  458:Thing_StopTracking(0),

	int		  460:Player_AddRings(1, 3),
	int		  461:Thing_Spawn(5, 9),
	int		  462:Level_StopClock(0),
	int		  463:Thing_Dye(1), // color
	int		  464:TriggerEggCapsule(1, 2),

	int		  466:Level_SetFailed(1),
	int		  467:Sector_SetLight(2, 4),
	int		  468:Line_SetArg(2, 4),
	int		  469:Sector_SetGravity(2, 4),

	int		  475:ACS_Execute(1, 10),
	int		  476:ACS_ExecuteAlways(1, 10),
	int		  477:ACS_Suspend(1),
	int		  478:ACS_Terminate(1),

	int		  480:Polyobj_DoorSlide(5),
	int		  481:Polyobj_DoorSwing(4),
	int		  482:Polyobj_Move(4, 5),

	int		  484:Polyobj_Rotate(3, 4),

	int		  488:Polyobj_MoveByWaypoints(3, 5),
	int		  489:Polyobj_SetVisibilityTangibility(3),

	int		  491:Polyobj_SetAlpha(2, 3),
	int		  492:Polyobj_FadeAlpha(3, 4),

	int		  499:Sector_ToggleWaypoints(2),

	// Internal functions have negative values
	// [type] [ID]:[function name]([required args], [type of each arg, including optional ones])
	int		   -1:GetLineProperty(2, int, int),
	fixed	   -1:GetLinePropertyFixed(2, int, int),
	str		   -1:GetLinePropertyString(2, int, int),
	bool	   -1:GetLinePropertyBool(2, int, int),

	void	   -2:SetLineProperty(3, int, int, int),
	void	   -2:SetLinePropertyFixed(3, int, int, fixed),
	void	   -2:SetLinePropertyString(3, int, int, str),
	void	   -2:SetLinePropertyBool(3, int, int, bool),

	int		   -3:GetLineUserProperty(2, int, str),
	fixed	   -3:GetLineUserPropertyFixed(2, int, str),
	str		   -3:GetLineUserPropertyString(2, int, str),
	bool	   -3:GetLineUserPropertyBool(2, int, str),

	int		   -4:GetSectorProperty(2, int, int),
	fixed	   -4:GetSectorPropertyFixed(2, int, int),
	str		   -4:GetSectorPropertyString(2, int, int),
	bool	   -4:GetSectorPropertyBool(2, int, int),

	void	   -5:SetSectorProperty(3, int, int, int),
	void	   -5:SetSectorPropertyFixed(3, int, int, fixed),
	void	   -5:SetSectorPropertyString(3, int, int, str),
	void	   -5:SetSectorPropertyBool(3, int, int, bool),

	int		   -6:GetSectorUserProperty(2, int, str),
	fixed	   -6:GetSectorUserPropertyFixed(2, int, str),
	str		   -6:GetSectorUserPropertyString(2, int, str),
	bool	   -6:GetSectorUserPropertyBool(2, int, str),

	int		   -7:GetSideProperty(3, int, int, int),
	fixed	   -7:GetSidePropertyFixed(3, int, int, int),
	str		   -7:GetSidePropertyString(3, int, int, int),
	bool	   -7:GetSidePropertyBool(3, int, int, int),

	void	   -8:SetSideProperty(4, int, int, int, int),
	void	   -8:SetSidePropertyFixed(4, int, int, int, fixed),
	void	   -8:SetSidePropertyString(4, int, int, int, str),
	void	   -8:SetSidePropertyBool(4, int, int, int, bool),

	int		   -9:GetSideUserProperty(3, int, int, str),
	fixed	   -9:GetSideUserPropertyFixed(3, int, int, str),
	str		   -9:GetSideUserPropertyString(3, int, int, str),
	bool	   -9:GetSideUserPropertyBool(3, int, int, str),

	int		  -10:GetThingProperty(2, int, int),
	fixed	  -10:GetThingPropertyFixed(2, int, int),
	str		  -10:GetThingPropertyString(2, int, int),
	bool	  -10:GetThingPropertyBool(2, int, int),

	void	  -11:SetThingProperty(3, int, int, int),
	void	  -11:SetThingPropertyFixed(3, int, int, fixed),
	void	  -11:SetThingPropertyString(3, int, int, str),
	void	  -11:SetThingPropertyBool(3, int, int, bool),

	int		  -12:GetThingUserProperty(2, int, str),
	fixed	  -12:GetThingUserPropertyFixed(2, int, str),
	str		  -12:GetThingUserPropertyString(2, int, str),
	bool	  -12:GetThingUserPropertyBool(2, int, str),

	int		  -13:GetPlayerProperty(2, int, int),
	fixed	  -13:GetPlayerPropertyFixed(2, int, int),
	str		  -13:GetPlayerPropertyString(2, int, int),
	bool	  -13:GetPlayerPropertyBool(2, int, int),

	void	  -14:SetPlayerProperty(3, int, int, int),
	void	  -14:SetPlayerPropertyFixed(3, int, int, fixed),
	void	  -14:SetPlayerPropertyString(3, int, int, str),
	void	  -14:SetPlayerPropertyBool(3, int, int, bool),

	int		  -15:GetPolyobjProperty(2, int, int),
	fixed	  -15:GetPolyobjPropertyFixed(2, int, int),
	str		  -15:GetPolyobjPropertyString(2, int, int),
	bool	  -15:GetPolyobjPropertyBool(2, int, int),

	void	  -16:SetPolyobjProperty(3, int, int, int),
	void	  -16:SetPolyobjPropertyFixed(3, int, int, fixed),
	void	  -16:SetPolyobjPropertyString(3, int, int, str),
	void	  -16:SetPolyobjPropertyBool(3, int, int, bool),

	int		 -100:strcmp(2, str, str),
	int		 -101:strcasecmp(2, str, str),
	int		 -101:stricmp(2, str, str),

	// Reimplementations of trigger linedefs.
	int		 -300:CountEnemies(0, int, int),
	int		 -301:CountPushables(0, int, int),
	bool	 -302:HaveUnlockableTrigger(1, int),
	bool	 -303:HaveUnlockable(1, int),
	str		 -304:PlayerSkin(0),
	str		 -305:GetObjectDye(0),
	int		 -306:PlayerEmeralds(0),
	int		 -307:PlayerLap(0),
	int		 -308:LowestLap(0),
	bool	 -309:EncoreMode(0),
	bool	 -310:PrisonBreak(0),
	bool	 -311:TimeAttack(0),
	int		 -312:ThingCount(0, str, int, int),
	bool	 -313:GrandPrix(0),
	str		 -314:GetGrabbedSprayCan(0),
	bool	 -315:PlayerBot(0),

	void	 -500:CameraWait(1, int),
	int		 -501:PodiumPosition(0),
	void	 -502:PodiumFinish(0),
	void	 -503:SetLineRenderStyle(3, int, int, fixed),
	void	 -504:MapWarp(2, str, bool),
	int		 -505:AddBot(0, str, int, int),
	void	 -506:StopLevelExit(0),
	void	 -507:ExitLevel(0, bool),
	void	 -508:Music_Play(1, str),
	void	 -509:Music_StopAll(0),
	void	 -510:Music_Remap(2, str, str),

	void	 -600:Dialogue_SetSpeaker(2, str, int),
	void	 -601:Dialogue_SetCustomSpeaker(2, str, str, str, str),
	void	 -602:Dialogue_NewText(1, str),
	void	 -603:Dialogue_WaitForDismiss(0),
	void	 -604:Dialogue_WaitForText(0),

	//  0 to 56: Implemented by ACSVM
	void  {  2     }:__suspend(void),

	void  { 55,  56}:Delay(int),
	int   { 57,  58}:Random(int, int),
	fixed { 57,  58}:RandomFixed(fixed, fixed),
	int   { 59,  60}:__ThingCountOld(str, int),
	void  { 61,  62}:TagWait(int),
	void  { 63,  64}:PolyWait(int),
	void  { 65,  66}:ChangeFloor(int, str),
	void  { 67,  68}:ChangeCeiling(int, str),
	// 69 to 79: Implemented by ACSVM
	int   { 80     }:LineSide(void),
	void  { 81,  82}:__ScriptWaitDirect(int), // 81 to 82: Implemented by ACSVM
	void  { 83     }:ClearLineSpecial(void),
	// 84 to 85: Implemented by ACSVM
	void  { 85     }:BeginPrint(void),
	void  { 85     }:BeginPrintBold(void),
	void  { 85     }:BeginLog(void),
	void  { 85     }:BeginStrParam(void),
	void  { 86     }:EndPrint(void),
	void  { 87     }:PrintString(str), // 87 to 89: Implemented by ACSVM
	void  { 88     }:PrintInt(int),
	void  { 88     }:PrintNumber(int),
	void  { 89     }:PrintChar(int),
	int   { 90     }:PlayerCount(void),
	int   { 91     }:GameType(void),
	int   { 92     }:GameSpeed(void),
	int   { 93     }:Timer(void),
	void  { 94     }:SectorSound(str, int),
	void  { 95     }:AmbientSound(str, int),

	void  { 97     }:SetLineTexture(int, int, int, str),
	void  { 98     }:SetLineBlocking(int, int),
	void  { 99     }:SetLineSpecial(int, int, int, int, int, int, int),
	void  {100     }:ThingSound(int, str, int),
	void  {101     }:EndPrintBold(void),

	bool  {118     }:IsNetworkGame(void),
	int   {119     }:PlayerTeam(void),
	int   {120     }:PlayerRings(void),

	int   {122     }:PlayerScore(void),

	int   {136     }:FixedMul(fixed, fixed), // 136 to 137: Implemented by ACSVM
	int   {137     }:FixedDiv(fixed, fixed),

	void  {157     }:PrintFixed(fixed), // 157: Implemented by ACSVM

	// 167 to 173: Implemented by ACSVM

	// 175 to 179: Implemented by ACSVM

	// 181 to 189: Implemented by ACSVM

	// 203 to 217: Implemented by ACSVM

	// 225 to 243: Implemented by ACSVM

	int   {247     }:PlayerNumber(void),
	int   {248     }:ActivatorTID(void),

	int   {253     }:strlen(str), // 253: Implemented by ACSVM

	// 256 to 257: Implemented by ACSVM
	void  {257     }:SetResultValue(int),
	void  {257     }:SetResultValueFixed(fixed),

	// 263: Implemented by ACSVM

	void  {270     }:EndLog(void),

	void  {273     }:PrintModuleCharArray(int, int), // 273 to 275: Implemented by ACSVM
	void  {274     }:PrintWorldCharArray(int, int),
	void  {275     }:PrintGlobalCharArray(int, int),

	// 291 to 325: Implemented by ACSVM

	// 330: Implemented by ACSVM

	void  {349     }:PrintBinary(bool), // 349 to 361: Implemented by ACSVM
	void  {350     }:PrintHex(int),

	str   {352     }:EndStrParam(void),
	void  {353     }:PrintModuleCharRange(int, int, int, int),
	void  {354     }:PrintWorldCharRange(int, int, int, int),
	void  {355     }:PrintGlobalCharRange(int, int, int, int),
	int   {356     }:StrCpyToModuleCharRange(int, int, int, int, str, int),
	int   {357     }:StrCpyToWorldCharRange(int, int, int, int, str, int),
	int   {358     }:StrCpyToGlobalCharRange(int, int, int, int, str, int),

	void  {361     }:ScriptWait(str),

	// 363 to 380: Implemented by ACSVM

	void  {378     }:PrintLocalCharArray(int, int),
	void  {379     }:PrintLocalCharRange(int, int, int, int),
	int   {380     }:StrCpyToLocalCharRange(int, int, int, int, str, int);

print __Print
(
	(begin): BeginPrint,
	(end):   EndPrint,

	ACS_PrintPropertyBase()
);

print __PrintBold
(
	(begin): BeginPrintBold,
	(end):   EndPrintBold,

	ACS_PrintPropertyBase()
);

print PrintRaw
(
	ACS_PrintPropertyBase()
);

print __Log
(
	(begin): BeginLog,
	(end):   EndLog,

	ACS_PrintPropertyBase()
);

print __StrParam
(
	(begin): BeginStrParam,
	(end):   EndStrParam,

	ACS_PrintPropertyBase()
);

#endif//__GDCC_Header__ACS__rrspecial_acs__

